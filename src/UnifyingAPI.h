/**************************************************************
 This file is part of Kinect Sensor Architecture Development Project.

   Kinect Sensor Architecture Development Project is free software:
you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   Kinect Sensor Architecture Development Project is distributed in
the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with Kinect Sensor Architecture Development Project.  If
not, see <http://www.gnu.org/licenses/>.
**************************************************************/
/**************************************************************
The work was done in joint collaboration with Cisco Systems Inc.
Copyright Â© 2012, Cisco Systems, Inc. and UCLA
*************************************************************/

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class UnifyingAPI */

#ifndef _Included_UnifyingAPI
#define _Included_UnifyingAPI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     UnifyingAPI
 * Method:    convert_raw_to_unified
 * Signature: ([BIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_UnifyingAPI_convert_1raw_1to_1unified
  (JNIEnv *, jclass, jbyteArray, jint, jint, jstring, jstring, jstring);

/*
 * Class:     UnifyingAPI
 * Method:    convert_unified_to_raw
 * Signature: (Ljava/lang/String;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_UnifyingAPI_convert_1unified_1to_1raw
  (JNIEnv *, jclass, jstring);

/*
 * Class:     UnifyingAPI
 * Method:    process_unified_native
 * Signature: (Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_UnifyingAPI_process_1unified_1native
  (JNIEnv *, jclass, jstring, jstring);


#ifdef __cplusplus
}
#endif
#endif
